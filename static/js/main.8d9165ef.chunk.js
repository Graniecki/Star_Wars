(this["webpackJsonpstar-wars"]=this["webpackJsonpstar-wars"]||[]).push([[0],{26:function(t,n,e){},27:function(t,n,e){},28:function(t,n,e){},29:function(t,n,e){},30:function(t,n,e){},36:function(t,n,e){},37:function(t,n,e){},38:function(t,n,e){"use strict";e.r(n);var c=e(1),a=e(0),i=e(18),o=e.n(i),r=(e(26),e(27),e(7)),s=e(8),j=(e(28),e(2)),u=(e(29),e(30),function(t){var n=t.planet,e=t.index;return Object(c.jsxs)("div",{className:"card",children:[Object(c.jsx)("h2",{children:Object(c.jsx)(r.b,{to:"/planet/".concat(e+1),children:n.name})}),Object(c.jsx)("p",{children:"Climate: ".concat(n.climate)}),Object(c.jsx)("p",{children:"Population: ".concat("unknown"!==n.population?n.population:"Information about the population on this planet is unknown")})]})}),l=function(t){var n=t.planets;return Object(c.jsx)("div",{className:"planets-cards",children:n.map((function(t,n){return Object(c.jsx)(u,{planet:t,index:n},t.name)}))})},p=(e(36),e(20)),b=function(t){var n=t.residents,e=Object(a.useState)([]),i=Object(s.a)(e,2),o=i[0],r=i[1];return Object(a.useEffect)((function(){return n.forEach((function(t){fetch(t).then((function(t){return t.json()})).then((function(t){return r((function(n){return[].concat(Object(p.a)(n),[t.name])}))}))})),function(){r([])}}),[n]),Object(c.jsxs)(c.Fragment,{children:[Object(c.jsx)("p",{children:"Residents:"}),Object(c.jsx)("ul",{children:o.map((function(t){return Object(c.jsx)("li",{children:t},t)}))})]})},d=(e(37),function(t){var n=t.planetId;return Object(c.jsxs)("div",{className:"pages-navigation",children:[Object(c.jsx)("button",{type:"button",children:Object(c.jsx)(r.b,{to:"/planet/".concat(+n-1<=0?1:+n-1),children:"Previous planet"})}),Object(c.jsx)("button",{type:"button",children:Object(c.jsx)(r.b,{to:"/planet/".concat(+n+1>60?60:+n+1),children:"Next planet"})})]})}),h=function(t){var n=t.match,e=n.params.planetId,i=Object(a.useState)([]),o=Object(s.a)(i,2),r=o[0],j=o[1],u=Object(a.useState)([]),l=Object(s.a)(u,2),p=l[0],h=l[1];return Object(a.useEffect)((function(){fetch("".concat("https://swapi.dev/api/planets/").concat(e,"/")).then((function(t){return t.json()})).then((function(t){j(t),h(t.residents)}))}),[e]),Object(c.jsxs)(c.Fragment,{children:[Object(c.jsxs)("div",{className:"planet-info",children:[Object(c.jsx)("p",{children:"Name - ".concat(r.name)}),Object(c.jsx)("p",{children:"Rotation period - ".concat(r.rotation_period)}),Object(c.jsx)("p",{children:"Diameter - ".concat(r.diameter)}),Object(c.jsx)("p",{children:"Climate - ".concat(r.climate)}),Object(c.jsx)("p",{children:"Gravity - ".concat(r.gravity)}),Object(c.jsx)("p",{children:"Terrain - ".concat(r.terrain)}),Object(c.jsx)("p",{children:"Population: ".concat("unknown"!==r.population?r.population:"Information about the population on this planet is unknown")}),Object(c.jsx)(b,{residents:p})]}),Object(c.jsx)(d,{planetId:e})]})},O=function(){var t=Object(a.useState)([]),n=Object(s.a)(t,2),e=n[0],i=n[1];return Object(a.useEffect)((function(){fetch("http://swapi.dev/api/planets/").then((function(t){return t.json()})).then((function(t){return i(t.results)}))}),[]),Object(c.jsxs)("div",{className:"catalogue",children:[Object(c.jsx)(l,{planets:e}),Object(c.jsx)(j.c,{children:Object(c.jsx)(j.a,{exact:!0,path:"/planet/:planetId",component:h})})]})};var f=function(){return Object(c.jsx)(r.a,{children:Object(c.jsx)("div",{className:"App",children:Object(c.jsx)(O,{})})})},x=function(t){t&&t instanceof Function&&e.e(3).then(e.bind(null,39)).then((function(n){var e=n.getCLS,c=n.getFID,a=n.getFCP,i=n.getLCP,o=n.getTTFB;e(t),c(t),a(t),i(t),o(t)}))};o.a.render(Object(c.jsx)(f,{}),document.getElementById("root")),x()}},[[38,1,2]]]);
//# sourceMappingURL=main.8d9165ef.chunk.js.map
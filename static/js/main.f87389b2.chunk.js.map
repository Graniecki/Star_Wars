{"version":3,"sources":["components/PlanetCard/PlanetCard.jsx","components/PlanetsCards/PlanetsCards.jsx","components/ResidentsInfo/ResidentsInfo.jsx","components/PagesNavigation/PagesNavigation.jsx","components/PlanetInfo/PlanetInfo.jsx","components/Catalogue/Catalogue.jsx","App.js","reportWebVitals.js","index.js"],"names":["PlanetCard","planet","index","className","to","name","climate","population","PlanetsCards","planets","map","ResidentsInfo","residents","useState","persons","setPersons","useEffect","forEach","resident","fetch","then","response","json","array","current","person","PagesNavigation","planetId","type","PlanetInfo","match","params","setPlanet","setResident","diameter","gravity","terrain","Catalogue","setPlanets","results","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f87389b2.chunk.js","sourcesContent":["import React from 'react';\nimport './PlanetCard.css';\n\nimport { Link } from 'react-router-dom';\n\n//card where display short info about planet\n//preview card\nexport const PlanetCard = ({ planet, index }) => {\n  return (\n    <div className=\"card\">\n      <h2>\n        {/*adding links to each header for routing*/}\n        <Link to={`/planet/${index + 1}`} >{planet.name}</Link>\n      </h2>\n      <p>{`Climate: ${planet.climate}`}</p>\n      <p>\n        {`Population: ${planet.population !== 'unknown'\n          ? planet.population\n          : 'Information about the population on this planet is unknown'\n        }`}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport './PlanetsCards.css';\n\nimport { PlanetCard } from '../PlanetCard';\n\nexport const PlanetsCards = ({ planets }) => {\n\n  return (\n    /*rendering cards of planets with some info*/\n    <div className=\"planets-cards\">\n      {planets.map((planet, index) => (\n        <PlanetCard\n          key={planet.name}\n          planet={planet}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\n//component fetch information about\n//persons who lives on specific planet\nexport const ResidentsInfo = ({ residents }) => {\n  const [persons, setPersons] = useState([]);\n\n  {/*fetching data from server about each resident */}\n  useEffect(() => {\n    residents.forEach(resident => {\n      fetch(resident)\n        .then(response => response.json())\n        .then(array => setPersons(current => [...current, array.name]))\n    });\n\n    {/*after unmounting clear info about residents */}\n    return () => {\n      setPersons([])\n    };\n    {/*updating only if residents array will be changed */}\n  }, [residents]);\n\n  return (\n    <>\n      <p>Residents:</p>\n      <ul>\n        {persons.map(person => (\n          <li key={person}>\n            {person}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React from 'react';\nimport './PagesNavigation.css';\n\nimport { Link } from 'react-router-dom';\n\n//navigation to move to another planet\nexport const PagesNavigation = ({ planetId }) => {\n  return (\n    <div className=\"pages-navigation\">\n\n      <button type=\"button\">\n        {/*adding routing pathes to move up or down */}\n        {/*checking planet id, can not be less than 1or more than 60 */}\n        <Link\n          to={`/planet/${(+planetId - 1) <= 0 ? 1 : +planetId - 1}`}\n        >\n          Previous planet\n        </Link>\n      </button>\n      <button type=\"button\">\n        <Link\n          to={`/planet/${(+planetId + 1) > 60 ? 60 : +planetId + 1}`}\n        >\n          Next planet\n        </Link>\n      </button>\n  </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './PlanetInfo.css';\n\nimport { ResidentsInfo } from '../ResidentsInfo';\nimport { PagesNavigation } from '../PagesNavigation';\n\n//this component contain detailed information\n//about selected planet\nexport const PlanetInfo = ({ match }) => {\n  const URL = 'https://swapi.dev/api/planets/';\n  const { planetId } = match.params;\n  const [planet, setPlanet] = useState([]);\n  const [residents, setResident] = useState([]);\n\n  //fetching data from server for each specific id (planet)\n  useEffect(() => {\n    fetch(`${URL}${planetId}/`)\n      .then(response => response.json())\n      .then(array => {\n        setPlanet(array);\n        setResident(array.residents);\n      });\n  }, [planetId]);\n\n  return (\n    <>\n      <div className=\"planet-info\">\n        <p>{`Name - ${planet.name}`}</p>\n        <p>{`Rotation period - ${planet[\"rotation_period\"]}`}</p>\n        <p>{`Diameter - ${planet.diameter}`}</p>\n        <p>{`Climate - ${planet.climate}`}</p>\n        <p>{`Gravity - ${planet.gravity}`}</p>\n        <p>{`Terrain - ${planet.terrain}`}</p>\n        <p>\n          {/*checking that planet has info about population */}\n          {`Population: ${planet.population !== 'unknown'\n            ? planet.population\n            : 'Information about the population on this planet is unknown'\n          }`}\n        </p>\n        {/*create specific component where display info\n        about all residents of planet */}\n        <ResidentsInfo residents={residents} />\n      </div>\n      {/*navigation component to move between pages */}\n      <PagesNavigation planetId={planetId} />\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './Catalogue.css';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport { PlanetsCards } from '../PlanetsCards';\nimport { PlanetInfo } from '../PlanetInfo';\n\n\nexport const Catalogue = () => {\n  const URL = 'https://swapi.dev/api/planets/';\n  const [planets, setPlanets] = useState([]);\n\n  // getting information from server\n  useEffect(() => {\n    fetch(URL)\n      .then(response => response.json())\n      .then(array => setPlanets(array.results));\n  }, []);\n\n  return (\n    <div className=\"catalogue\">\n      <PlanetsCards planets={planets} />\n\n      {/*adding path to universal component where will be\n      display information about selected planet*/}\n      <Switch>\n        <Route exact path=\"/planet/:planetId\" component={PlanetInfo} />\n      </Switch>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Catalogue } from './components/Catalogue';\n\nfunction App() {\n  // import and add Router\n  return (\n    <Router>\n      <div className=\"App\">\n        <Catalogue />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}